<% content_for :style do %>
<style type="text/css">
body {
    background-color: #E0E0E0;
}
div {
}
.metric {
    float: left;
}
.metric .name {
    width: 100%;
    height: 2em;
    float: left;
    clear: both;
    line-height: 2em;
    text-align: left;
    padding-left: 0.3em;
    padding-right: 0.3em;
    color: #FFFFFF;
}
.background1 {
    background-color: #00CCFF;
}
.background2 {
    background-color: #0099FF;
}
.background3 {
    background-color: #0066FF;
}
.base_project {
    float: left;
    height: 100%;
    display: table;
    font-size: 14px;
}
.base_project .name {
    clear: both;
    float: left;
    width: 100%;
    height: 2em;
    display: table-cell;
    vertical-align: middle;
    padding-left: 0.3em;
    padding-right: 0.3em;
}
.base_project .measure_data_container {
}
.base_project .measure_data {
}

.target_project {
    float: left;
    height: 100%;
    display: table;
}
.target_project .name {
    clear: both;
    display: table-cell;
}
.target_project .measure_data {
}
</style>
<% end %>

<% content_for :script do %>
<script type="text/javascript">
// global variables
window.base_project_id = <%= j @base_project.id %>;
window.base_project_measure_data = JSON.parse('<%= j JSON.dump(@base_project_measure_data) %>');
window.metrics = JSON.parse('<%= j JSON.dump(@metrics.map {|metric| metric.id}) %>');
window.versions = JSON.parse('<%= j JSON.dump(@versions) %>')

function ajax_request(method, path, data, callback)
{
    var http;
    if (window.XMLHttpRequest) {
        // code for IE7+, Firefox, Chrome, Opera, Safari
        http = new XMLHttpRequest();
    } else {
        // code for IE6, IE5
        http = new ActiveXObject("Microsoft.XMLHTTP");
    }
    http.onreadystatechange = function()
    {
        callback(http);
    }
    http.open(method, path, true);
    if (method == "POST") {
        http.setRequestHeader("Content-type","application/x-www-form-urlencoded");
        http.setRequestHeader("Content-length", data.length);
        http.send(data);
    } else {
        http.send()
    }
}

function remove_all_child(node)
{
    while (node.firstChild) {
        node.removeChild(node.firstChild);
    }
}

function update_project_node(measure_data)
{
    var project_xpath = "//div[@id='project" + measure_data['id'] + "']";
    // set project name
    var project_name_xpath = project_xpath + "//div[@id='name']";
    var project_name_node = document.evaluate(project_name_xpath, document, null, 9, null).singleNodeValue;
    remove_all_child(project_name_node);
    project_name_node[0].nodeValue = measure_data['name']
    // add measure data
    var project_measure_data_xpath = project_xpath + "//div[@id='measure_data_container']";
    var project_measure_data_node = document.evaluate(project_measure_data_xpath, document, null, 9, null).singleNodeValue;
    remove_all_child(project_measure_data_node);
    for (var metric_id in window.metrics) {
        var node = document.createElement("div");
        node.class = "measure_data";
        node.appendChild(document.createTextNode(measure_data['measure_data'][metric_id]));
        project_measure_data_node.appendChild(node);
    }
}

function create_project_node(measure_data)
{
    var project_node = document.createElement("div");
    // set properties
    project_node.id = "project" + measure_data['id'];
    for (var key in properties) {
        project_node[key] = properties[key];
    }
    // append "name" node
    var name_node = document.createElement("div");
    name_node.appendChild(document.createTextNode(""));
    project_node.appendChild(name_node);
    // append data container
    var data_container_node = document.createElement("div");
    data_container_node.id = "measure_data_container";
    data_container_node.class = "measure_data_container";
    project_node.appendChild(data_container_node);
    // add project_node to project container
    var project_container_xpath = "//div[@id='project_container']";
    project_container_xpath.appendChild(project_node);
    // add data
    update_project_node(measure_data['id'], measure_data);
    return project_node;
}

function remove_project_node(project_id)
{
    var xpath = "//div[@id='project_container']//div[@id='project" + project_id + "']";
    var project_node = document.evaluate(xpath, document, null, 9, null).singleNodeValue;
    project_node.parentNode.removeChild(project_node);
    return project_node;
}

function measure_project(project_id, version, metrics, callback)
{
    ajax_callback = function(http) {
        if (http.readyState==4 && http.status==200) {
            // parse json data
            var measure_data = JSON.parse(http.responseText);
            if (project_id == window.base_project_id) {
                window.base_project_measure_data = measure_data;
            }
            if (measure_data) {
                callback(measure_data);
            } else {
                alert("Failed to get measure data of project " + project_id);
            }
        }
    }
    ajax_request('POST', '../get_measure_data',
                "project_id=" + project_id + "&version=" + version + "&metrics=" + METRICS.join(','),
                ajax_callback);
}
</script>
<% end %>

<div id="project_container">
    <div class="metric">
        <!--place holder-->
        <div class="name"></div>
        <!--metric names-->
        <% @metrics.each_index do |i| %>
            <div class="name" style="background-color: <%= (i%2 == 0)? '#282828' : '#484848' %>"><%= @metrics[i].name %></div>
        <% end %>
    </div>
</div>
